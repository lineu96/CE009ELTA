11/13
((11/13) * 0,40)+
((11/13) * 0.40)+
((10/12) * 0.40)+
((8/8) * 0.50)+
(4/6)+
((10/12) * 0.40)+
((8/10) * 0.40)+
((8/10) * 0.40)+
((5/5) * 0.50)+
(2/8)+
(3/5)+
(5/6)+
(0)+
(0)+
(1/1)
6
setwd("~/CE009CS")
rmarkdown::render_site()
setwd("~/CE009ELTA")
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE, eval = T)
dados <- read.csv2("estudantes.csv", header = T, dec = '.')
set.seed(1)
dados <- dados[sample(1:nrow(dados), 10),c(2,3,5,6)]
row.names(dados) <- NULL
names(dados) <- c("Turma", "Sexo", "Altura", "Peso")
dados$Altura <- dados$Altura*100
dados$Peso <- round(dados$Peso)
knitr::kable(dados)
knitr::kable(t(data.frame(`Turma` = "Qualitativa nominal",
"Sexo" = "Qualitativa nominal",
"Altura" = "Quantitativa contínua",
"Peso" = "Quantitativa contínua")))
knitr::kable(t(data.frame("Amostragem estratificada" = "Método probabilístico")))
tabela <- as.data.frame(table(dados$Turma))
tabela$Freq_r <- prop.table(table(dados$Turma))
names(tabela) <- c("Turma", "Frequência", "Frequência relativa")
knitr::kable(tabela)
knitr::kable(t(data.frame(R = "Turma A é a classe modal, ou seja, a maior parte dos indivíduos pertence à turma A.")))
breaks <- hist(dados$Peso, plot = F)$breaks
faixas <- cut(dados$Peso,
breaks = breaks,
include.lowest = T,
right = F)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
names(tabela) <- c("Peso", "Frequência", "Frequência relativa")
knitr::kable(tabela)
knitr::kable(t(data.frame(R = "[60, 70) é a faixa modal.")))
Altura <- c(mean(dados$Altura), var(dados$Altura), sd(dados$Altura))
names(Altura) <- c("Média", "Variância", "Desvio padrão")
df <- as.data.frame(Altura)
df$Peso <- c(mean(dados$Peso), var(dados$Peso), sd(dados$Peso))
knitr::kable(t(round(df, 2)))
df <- data.frame(CV = c(paste0(round((sd(dados$Altura)/mean(dados$Altura))*100, 2), "%"),
paste0(round((sd(dados$Peso)/mean(dados$Peso))*100,2), "%"))
)
rownames(df) <- c("Altura", "Peso")
knitr::kable(df)
knitr::kable(t(data.frame(R = "Peso varia mais que idade.")))
freq <- tabela$Frequência
names(freq) <- tabela$Peso
barplot(freq,
space = 0,
xlab = "Peso",
ylab = "Frequência",
main = "",
col = 0)
aiq = fivenum(dados$Altura)[4] - fivenum(dados$Altura)[2]
bp <- c(NA,fivenum(dados$Altura)[2:4],NA)
bp[1] <- bp[2] - (1.5*aiq)
bp[5] <- bp[4] + (1.5*aiq)
names(bp) <- c("Q1 - 1.5AIQ",
"Q1", "Q2", "Q3",
"Q3 + 1.5AIQ")
tabela <- c(min(dados$Altura), bp, max(dados$Altura))
names(tabela)[1] <- "Mínimo"
names(tabela)[7] <- "Máximo"
knitr::kable(t(tabela))
boxplot(dados$Altura, yaxt = "n", col = 0)
axis(2,
at=tabela[c(1, 3,4,5,7)],
labels = T)
knitr::kable(t(data.frame(R = "A variável é razoavelmete simétrica e não apresenta valores atípicos.")))
knitr::kable(table(dados$Sexo,
dados$Turma))
knitr::kable(t(data.frame(R = 'A turma A possui metade dos alunos do sexo masculino, já a turma B é predominantemente feminina.')))
par(mfrow = c(1,2))
boxplot(dados$Altura~dados$Sexo, ylab = "Altura", xlab = "Sexo", col = 0)
plot(dados$Peso~dados$Altura, ylab = "Peso", xlab = "Altura", pch = 19)
knitr::kable(t(data.frame(R1 = "Indivíduos do sexo masculino são mais altos que os do sexo feminino.",
R2 = "Quanto maior a altura, maior o peso.")))
tabela <- table(dados$Turma, dados$Sexo)
teste <- chisq.test(tabela)
knitr::kable(teste$observed, caption = "Valores observados.")
knitr::kable(teste$expected, caption = "Valores esperados.")
teste$statistic
(teste$observed-teste$expected)^2/teste$expected
sum((teste$observed-teste$expected)^2/teste$expected)
tabela <- table(dados$Turma, dados$Sexo)
teste <- chisq.test(tabela)
knitr::kable(teste$observed, caption = "Valores observados.")
knitr::kable(teste$expected, caption = "Valores esperados.")
Q = sum((teste$observed-teste$expected)^2/teste$expected)
names(Q) = ''
resp <- data.frame("Q"= round(Q,  2))
names(resp) <- 'Q = '
knitr::kable(t(resp))
knitr::opts_chunk$set(echo = TRUE, eval = T)
dados <- read.csv("milsa.csv")
set.seed(1)
dados <- dados[sample(1:nrow(dados), 10),c(2,8,5,6)]
row.names(dados) <- NULL
names(dados) <- c("Estado civil", "Região", "Salário", "Idade")
knitr::kable(dados)
knitr::kable(t(data.frame(`Estado civil` = "Qualitativa nominal",
"Região" = "Qualitativa nominal",
"Salário" = "Quantitativa contínua",
"Idade" = "Quantitativa contínua")))
knitr::kable(t(data.frame("Amostragem aleatória simples" = "Método probabilístico")))
tabela <- as.data.frame(table(dados$Região))
tabela$Freq_r <- prop.table(table(dados$Região))
names(tabela) <- c("Região", "Frequência", "Frequência relativa")
knitr::kable(tabela)
knitr::kable(t(data.frame(R = "outro é a classe modal, ou seja, a maior parte dos indivíduos não é da capital nem do interior.")))
breaks <- hist(dados$Salário, plot = F)$breaks
faixas <- cut(dados$Salário,
breaks = breaks,
include.lowest = T,
right = F)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
names(tabela) <- c("Salário", "Frequência", "Frequência relativa")
knitr::kable(tabela)
knitr::kable(t(data.frame(R = "[5, 10) é a faixa modal.")))
Salário <- c(mean(dados$Salário), var(dados$Salário), sd(dados$Salário))
names(Salário) <- c("Média", "Variância", "Desvio padrão")
df <- as.data.frame(Salário)
df$Idade <- c(mean(dados$Idade), var(dados$Idade), sd(dados$Idade))
knitr::kable(t(round(df, 2)))
```{r, echo=FALSE}
df <- data.frame(CV = c(paste0(round((sd(dados$Salário)/mean(dados$Salário))*100, 2), "%"),
paste0(round((sd(dados$Idade)/mean(dados$Idade))*100,2), "%"))
)
rownames(df) <- c("Idade", "Salário")
knitr::kable(df)
df <- data.frame(CV = c(paste0(round((sd(dados$Salário)/mean(dados$Salário))*100, 2), "%"),
paste0(round((sd(dados$Idade)/mean(dados$Idade))*100,2), "%"))
)
rownames(df) <- c("Salário", "Idade")
knitr::kable(df)
setwd("~/CE009ELTA")
rmarkdown::render_site()
setwd("~/CE009CS")
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/CE009CS")
setwd("~/CE009CS")
rmarkdown::render_site()
setwd("~/CE009ELTA")
rmarkdown::render_site()
rmarkdown::render_site()
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table) <- c('Mínimo', 'Q1', 'Média', 'Mediana', 'Q3', 'Máximo')
table
}
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor, na.rm = T)),
Variancia = var(vetor, na.rm = T),
Desvio_padrao = sd(vetor, na.rm = T)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
names(table) <- c('Amplitude', 'Variância', 'Desvio padrão')
table
}
notas <- readxl::read_xls('notas-chamada.xls')
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR', 'FALTAS', 'PROVA 1', 'REMOTA 1', 'REMOTA 2')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$`REMOTA 2`))
pander::pander(dispersao(notas$`REMOTA 2`))
library(ggplot2)
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`REMOTA 2`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`REMOTA 2`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("REMOTA 2")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p1
p2 = ggplot(data = notas,
mapping = aes(y=`REMOTA 2`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
RMAR
rmarkdown::render_site()
4.4243825 * 10^4
(4.4243825 * 10^4)/10000
(4.4243825 * 10^4)/1000
0.95^4
1-0.81
1-0.95^4
1-0.029
0.971^20
rmarkdown::render_site()
rmarkdown::render_site()
