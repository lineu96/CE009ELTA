par(mfcol=c(2,1), mar=c(2.5, 2.5, 0, 0), mgp=c(1.3, 0.5, 0))
curve(dunif(x, 0, 20), from=0, to=20,
xlab="y", ylab="f(y)",
ylim=c(0,1/18), xlim=c(-1,21),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, 0, 20), from=0, to=20,
xlab="y", ylab="f(y)",
ylim=c(0,1/18), xlim=c(-1,21),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, 0, 20), from=-1, to=1,
xlab="y", ylab="f(y)",
ylim=c(0,1/18), xlim=c(-1,1),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, 0, 20), from=-1, to=1,
xlab="y", ylab="f(y)",
ylim=c(0,1/18), xlim=c(-1,1),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, -1, 1), from=-1, to=1,
xlab="y", ylab="f(y)",
ylim=c(0,1/18), xlim=c(-1,1),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, -5, 5), from=-5, to=5,
xlab="y", ylab="f(y)",
ylim=c(0,1/18), xlim=c(-5,5),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, -5, 5), from=-5, to=5,
xlab="y", ylab="f(y)",
ylim=c(0,1), xlim=c(-5,5),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, -5, 5), from=-5, to=5
)
curve(dnorm(x, 0, 1), from=-5, to=5,
xlab="y", ylab="f(y)",
ylim=c(0,1), xlim=c(-5,5),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, 0, 1), from=-4, to=4,
xlab="y", ylab="f(y)",
ylim=c(0,1), xlim=c(-5,5),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, 0, 1), from=-4, to=4,
xlab="y", ylab="f(y)",
ylim=c(0,1), xlim=c(-4,4),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, 0, 1), from=-4, to=4,
xlab="y", ylab="f(y)",
ylim=c(0,0.5), xlim=c(-4,4),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, 0, 1), from=-4, to=4,
xlab="y", ylab="f(y)",
ylim=c(0,0.4), xlim=c(-4,4),
yaxt = 'n',
xaxt = 'n')
curve(dnorm(x, 0, 1), from=-4, to=4,
xlab="y", ylab="f(y)",
ylim=c(0,0.4), xlim=c(-4,4),
yaxt = 'n',
xaxt = 'n')
axis(1, at=c(0,5,10,15,20), labels=c(0,5,10,15,20))
axis(2, at=1/20, labels= '1/20')
curve(dnorm(x, 0, 1), from=-4, to=4,
xlab="y", ylab="f(y)",
ylim=c(0,0.4), xlim=c(-4,4),
yaxt = 'n',
xaxt = 'n')
axis(1, at=c(-3,-2,-1,0,1,2,3), labels=c(-3,-2,-1,0,1,2,3))
axis(2, at=c(0.1,0.2,0.3,0.4), labels= c(0.1,0.2,0.3,0.4))
curve(dnorm(x, 0, 1), from=-4, to=4,
xlab="y", ylab="f(y)",
ylim=c(0,0.5), xlim=c(-4,4),
yaxt = 'n',
xaxt = 'n')
axis(1, at=c(-3,-2,-1,0,1,2,3), labels=c(-3,-2,-1,0,1,2,3))
axis(2, at=c(0.1,0.2,0.3,0.4), labels= c(0.1,0.2,0.3,0.4))
axis(2, at=c(0,0.1,0.2,0.3,0.4), labels= c(0.1,0.2,0.3,0.4))
axis(2, at=c(0,0.1,0.2,0.3,0.4), labels= c(0,0.1,0.2,0.3,0.4))
segments(c(0, 20), 0, c(0, 20), rep(1/20,2), lty=3)
par(mfcol=c(2,1), mar=c(2.5, 2.5, 0, 0), mgp=c(1.3, 0.5, 0))
curve(dnorm(x, 0, 1), from=-4, to=4,
xlab="y", ylab="f(y)",
ylim=c(0,0.5), xlim=c(-4,4),
yaxt = 'n',
xaxt = 'n')
axis(1, at=c(-3,-2,-1,0,1,2,3), labels=c(-3,-2,-1,0,1,2,3))
axis(2, at=c(0,0.1,0.2,0.3,0.4), labels= c(0,0.1,0.2,0.3,0.4))
plot(0:3, c(1,3,3,1)/8, xlab="y", ylab="P(Y=y)", type="h", lty=2, ylim=c(0,3/8), xlim=c(0,3))
points(0:3, c(1,3,3,1)/8, pch=19)
probs <- cumsum(c(1,3,3,1)/8)
plot(-1:4, c(0,probs, 1), xlab="y", ylab=expression("P("<="y)"), type="s", lty=3, ylim=c(0,1), xlim=c(-1,4))
points(0:3, probs, pch=19)
points(0:3, c(0,probs[-length(probs)]), pch=1)
segments((-1:3), c(0,probs), (-1:3)+1, c(0,probs), lwd=2)
curve(dunif(x, 0, 20), from=0, to=20,
xlab="y", ylab="f(y)",
ylim=c(0,1/18), xlim=c(-1,21),
yaxt = 'n',
xaxt = 'n')
axis(1, at=c(0,5,10,15,20), labels=c(0,5,10,15,20))
axis(2, at=1/20, labels= '1/20')
segments(c(0, 20), 0, c(0, 20), rep(1/20,2), lty=3)
points(c(0,20), c(0,0), pch=1)
segments(c(-1, 20), c(0, 0) , c(0,21), c(0,0))
plot(0:3, c(1,3,3,1)/8, xlab="y", ylab="P(Y=y)", type="h", lty=2, ylim=c(0,3/8), xlim=c(0,3))
points(0:3, c(1,3,3,1)/8, pch=19)
probs <- cumsum(c(1,3,3,1)/8)
0:10
dbinom(0:10, 0.5)
dbinom(0:10, 1, prob = 0.5)
dbinom(0:10, 10, prob = 0.5)
plot(0:10,
dbinom(0:10, 10, prob = 0.5),
xlab="y",
ylab="P(Y=y)", type="h",
lty=2, ylim=c(0,3/8), xlim=c(0,3))
plot(0:10,
dbinom(0:10, 10, prob = 0.5),
xlab="y",
ylab="P(Y=y)", type="h",
lty=2, ylim=c(0,1), xlim=c(0,10))
dbinom(0:10, 10, prob = 0.5)
max(dbinom(0:10, 10, prob = 0.5))
plot(0:10,
dbinom(0:10, 10, prob = 0.5),
xlab="y",
ylab="P(Y=y)", type="h",
lty=2, ylim=c(0,0.3), xlim=c(0,10))
points(0:10, dbinom(0:10, 10, prob = 0.5), pch=19)
plot(0:10,
dbinom(0:10, 10, prob = 0.5),
xlab="y",
ylab="P(Y=y)", type="h",
lty=2, ylim=c(0,0.3), xlim=c(0,10),
yaxt = 'n', xaxt = 'n')
points(0:10, dbinom(0:10, 10, prob = 0.5), pch=19)
axis(1, at=0:10, labels=0:10)
axis(2, at=c(0,0.1,0.2,0.3), labels= c(0,0.1,0.2,0.3))
plot(0:10,
dbinom(0:10, 10, prob = 0.5),
xlab="y",
ylab="P(Y=y)", type="h",
lty=2, ylim=c(0,0.32), xlim=c(0,10),
yaxt = 'n', xaxt = 'n')
points(0:10, dbinom(0:10, 10, prob = 0.5), pch=19)
axis(1, at=0:10, labels=0:10)
axis(2, at=c(0,0.1,0.2,0.3), labels= c(0,0.1,0.2,0.3))
par(mfcol=c(2,1), mar=c(2.5, 2.5, 0, 0), mgp=c(1.3, 0.5, 0))
#-----
curve(dnorm(x, 0, 1), from=-4, to=4,
xlab="y", ylab="f(y)",
ylim=c(0,0.45), xlim=c(-4,4),
yaxt = 'n',
xaxt = 'n')
axis(1, at=c(-3,-2,-1,0,1,2,3), labels=c(-3,-2,-1,0,1,2,3))
axis(2, at=c(0,0.1,0.2,0.3,0.4), labels= c(0,0.1,0.2,0.3,0.4))
#-----
plot(0:10,
dbinom(0:10, 10, prob = 0.5),
xlab="y",
ylab="P(Y=y)", type="h",
lty=2, ylim=c(0,0.32), xlim=c(0,10),
yaxt = 'n', xaxt = 'n')
points(0:10, dbinom(0:10, 10, prob = 0.5), pch=19)
axis(1, at=0:10, labels=0:10)
axis(2, at=c(0,0.1,0.2,0.3), labels= c(0,0.1,0.2,0.3))
#-----
set.seed(3)
turma = sample(c("A", "B"), 10, replace = T)
curso = sample(c("Sim", "Não"), 10, replace = T)
portugues = round(rnorm(10, 6, 3))
matematica = round(rnorm(10, 6, 3))
df <- data.frame(aluno = 1:10,
turma,
curso,
portugues,
matematica)
names(df) <- c("Aluno", "Turma", "Curso",
"Português",
"Matemática")
df
cov(df$Português,
df$Matemática)
df$Português - mean(df$Português)
df$Matemática - mean(df$Matemática)
(df$Português - mean(df$Português))*(df$Matemática - mean(df$Matemática))
p<-(df$Português - mean(df$Português))*(df$Matemática - mean(df$Matemática))
sum(p)
sum(p)/9
p
mode(p)
abs(p)
sum(abs(p))
sum((p))
p
[9]  5.17 -3.23
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
table
}
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor)),
Variancia = var(vetor),
Desvio_padrao = sd(vetor)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
table
}
notas <- readxl::read_xls('notas-chamada.xls')
notas <- readxl::read_xls('notas-chamada.xls')
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR', 'FALTAS', 'PROVA 1')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$`PROVA 1`))
p1 = ggplot(notas) +
geom_histogram(aes(x=`PROVA 1`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`PROVA 1`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 1")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`PROVA 1`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`PROVA 1`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 1")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=`PROVA 1`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
setwd("~/CE009ELTA")
rmarkdown::render_site()
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table)
vetor = rnorm(100)
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table)
setwd("~/CE009ELTA")
rmarkdown::render_site()
sqrt(122.5)
sqrt(72.6)
