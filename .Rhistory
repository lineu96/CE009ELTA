replace = TRUE)
}
## Coletando diferentes amostras
amostras <- matrix(nrow = tamanho_amostra,
ncol = n_amostras)
for(i in 1:n_amostras) {
amostras[,i] <- sample(populacao,
size = tamanho_amostra,
replace = TRUE)
}
amostras <- as.data.frame(amostras)
dim(amostras)
## Calculando a média de cada amostra
medias <- colMeans(amostras)
## Distribuição amostral empírica de forma gráfica
hist(medias,
col = 0,
probability = T,
xlab = 'Médias',
ylab = 'Densidade',
main = 'Distribuição amostral da média')
lines(density(medias), col = 1, lwd = 3)
legend(x = "topright",
lwd = c(3,3,3),
col= c(2,3,4),
legend=c("Mediana",
"Média",
"Quantis 5% e 95%"))
## Estimativas pontuais baseada na distribuição amostral
mean(medias)
median(medias)
## Uma estimativa intervalar baseada na distribuição amostral
quantile(medias, probs = c(0.05, 0.95))
## Adicionando quantidades no gráfico
### Mediana
abline(v = quantile(medias,
probs = 0.5),
col = 2, lwd = 5)
### Média
abline(v = mean(medias),
col = 3, lwd = 5)
### Quantis
abline(v = quantile(medias,
probs = c(0.05, 0.95)),
col = 4, lwd = 5)
### Valor real do parâmetro
abline(v = mean(populacao), col = 1, lwd = 5)
## Estimativas pontuais baseada na distribuição amostral
mean(medias)
median(medias)
mean(populacao)
dp_media_amostra
## Centrando a distribuição amostral na média de uma amostra
i=1
for (i in 1:100) {
Sys.sleep(0.3)
### Média e desvio padrão
media_amostra <- mean(amostras[,i])
dp_media_amostra <- sd(populacao)/sqrt(nrow(amostras))
### Gráfico
inferior <- media_amostra - dp_media_amostra
superior <- media_amostra + dp_media_amostra
x <- seq(-4, 4,
length = 1000) * dp_media_amostra + media_amostra
y <- dnorm(x, media_amostra, dp_media_amostra)
plot(x,y,
type = "l",
lwd = 2,
axes = FALSE,
xlab = "",
ylab = "",
main = paste0(i))
pontos_x <-
seq(-5 * dp_media_amostra + media_amostra,
5 * dp_media_amostra + media_amostra,
by = dp_media_amostra)
axis(side = 1, at = round(pontos_x, 1), pos = 0)
## Adicionando quantidades no gráfico
### Mediana
abline(v = qnorm(0.5, media_amostra,
dp_media_amostra),
col = 2, lwd = 5)
### Média amostral
abline(v = media_amostra,
col = 3, lwd = 5)
### Quantis
abline(v = qnorm(c(0.025, 0.975),
media_amostra,
dp_media_amostra),
col = 2, lwd = 5)
## Verdadeira média
abline(v = mean(populacao), col = 1, lwd = 5)
}
### Quantis
abline(v = qnorm(c(0.05, 0.95),
media_amostra,
dp_media_amostra),
col = 2, lwd = 5)
for (i in 1:100) {
Sys.sleep(0.3)
### Média e desvio padrão
media_amostra <- mean(amostras[,i])
dp_media_amostra <- sd(populacao)/sqrt(nrow(amostras))
### Gráfico
inferior <- media_amostra - dp_media_amostra
superior <- media_amostra + dp_media_amostra
x <- seq(-4, 4,
length = 1000) * dp_media_amostra + media_amostra
y <- dnorm(x, media_amostra, dp_media_amostra)
plot(x,y,
type = "l",
lwd = 2,
axes = FALSE,
xlab = "",
ylab = "",
main = paste0(i))
pontos_x <-
seq(-5 * dp_media_amostra + media_amostra,
5 * dp_media_amostra + media_amostra,
by = dp_media_amostra)
axis(side = 1, at = round(pontos_x, 1), pos = 0)
## Adicionando quantidades no gráfico
### Mediana
abline(v = qnorm(0.5, media_amostra,
dp_media_amostra),
col = 2, lwd = 5)
### Média amostral
abline(v = media_amostra,
col = 3, lwd = 5)
### Quantis
abline(v = qnorm(c(0.05, 0.95),
media_amostra,
dp_media_amostra),
col = 2, lwd = 5)
## Verdadeira média
abline(v = mean(populacao), col = 1, lwd = 5)
}
#populacao <- rnorm(30, 170,10)
quest <- read.csv("respostas.csv")
populacao <- quest$Qual.o.seu.peso.
length(populacao)
hist(populacao)
## Definindo algumas quantidades
tamanho_amostra <- 10
n_amostras <- 100
## Coletando diferentes amostras
amostras <- matrix(nrow = tamanho_amostra,
ncol = n_amostras)
for(i in 1:n_amostras) {
amostras[,i] <- sample(populacao,
size = tamanho_amostra,
replace = TRUE)
}
amostras <- as.data.frame(amostras)
dim(amostras)
## Calculando a média de cada amostra
medias <- colMeans(amostras)
## Distribuição amostral empírica de forma gráfica
hist(medias,
col = 0,
probability = T,
xlab = 'Médias',
ylab = 'Densidade',
main = 'Distribuição amostral da média')
lines(density(medias), col = 1, lwd = 3)
legend(x = "topright",
lwd = c(3,3,3),
col= c(2,3,4),
legend=c("Mediana",
"Média",
"Quantis 5% e 95%"))
## Estimativas pontuais baseada na distribuição amostral
mean(medias)
median(medias)
## Uma estimativa intervalar baseada na distribuição amostral
quantile(medias, probs = c(0.05, 0.95))
## Adicionando quantidades no gráfico
### Mediana
abline(v = quantile(medias,
probs = 0.5),
col = 2, lwd = 5)
### Média
abline(v = mean(medias),
col = 3, lwd = 5)
### Quantis
abline(v = quantile(medias,
probs = c(0.05, 0.95)),
col = 4, lwd = 5)
### Valor real do parâmetro
abline(v = mean(populacao), col = 1, lwd = 5)
mean(populacao)
## Centrando a distribuição amostral na média de uma amostra
i=1
for (i in 1:100) {
Sys.sleep(0.3)
### Média e desvio padrão
media_amostra <- mean(amostras[,i])
dp_media_amostra <- sd(populacao)/sqrt(nrow(amostras))
### Gráfico
inferior <- media_amostra - dp_media_amostra
superior <- media_amostra + dp_media_amostra
x <- seq(-4, 4,
length = 1000) * dp_media_amostra + media_amostra
y <- dnorm(x, media_amostra, dp_media_amostra)
plot(x,y,
type = "l",
lwd = 2,
axes = FALSE,
xlab = "",
ylab = "",
main = paste0(i))
pontos_x <-
seq(-5 * dp_media_amostra + media_amostra,
5 * dp_media_amostra + media_amostra,
by = dp_media_amostra)
axis(side = 1, at = round(pontos_x, 1), pos = 0)
## Adicionando quantidades no gráfico
### Mediana
abline(v = qnorm(0.5, media_amostra,
dp_media_amostra),
col = 2, lwd = 5)
### Média amostral
abline(v = media_amostra,
col = 3, lwd = 5)
### Quantis
abline(v = qnorm(c(0.05, 0.95),
media_amostra,
dp_media_amostra),
col = 2, lwd = 5)
## Verdadeira média
abline(v = mean(populacao), col = 1, lwd = 5)
}
plot(0, type = 'n',
xlim = c(min(medias) - 4*sd(medias),
max(medias) + 4*sd(medias)),
ylim = c(0, (max(density(medias)$y) + 0.1*max(density(medias)$y))),
xlab = '',
ylab = '')
## Centrando a distribuição amostral na média de uma amostra
i=1
for (i in 1:100) {
Sys.sleep(0.3)
### Média e desvio padrão
media_amostra <- mean(amostras[,i])
dp_amostra <- sd(populacao)/sqrt(nrow(amostras))
### Gráfico
inferior <- media_amostra - dp_amostra
superior <- media_amostra + dp_amostra
x <- seq(-4, 4,
length = 1000) * dp_amostra + media_amostra
y <- dnorm(x, media_amostra, dp_amostra)
lines(x,y,
type = "l",
lwd = 2,
col = i)
## Verdadeira média
abline(v = mean(populacao), col = 1, lwd = 7)
}
### Média e desvio padrão VERDADEIROS
media_pop <- mean(populacao)
dp_media_pop <- sd(populacao)/sqrt(nrow(amostras))
### Gráfico
inferior <- media_pop - dp_media_pop
superior <- media_pop + dp_media_pop
x <- seq(-4, 4,
length = 1000) * dp_media_pop + media_pop
y <- dnorm(x, media_pop, dp_media_pop)
lines(x,y,
type = "l",
lwd = 10,
col = 1)
## Verdadeira média
abline(v = mean(populacao), col = 1, lwd = 10)
dhyper(2, 10, 5, 4)
A pergunta de interesse é: existe evidência suficiente nos dados que permite afirmar que a média é superior a 20?
A pergunta de interesse é: existe evidência suficiente nos dados que permite afirmar que a média é superior a 20?
plot(1, type = 'n', xaxt = 'n', yaxt = 'n', xlim = c(-1,7), ylim = c(0,0.3),
xlab = "Y", ylab = c("P(Y=y)"))
axis(1, at=c(0,2,4,6), labels=c(0,2,4,6))
axis(2, at=c(0.25, 0.2, 0.05), labels=c(0.25, 0.2, 0.05))
lines(x = c(0:2), y = rep(0.05,3), lwd = 2)
plot(1, type = 'n', xaxt = 'n', yaxt = 'n', xlim = c(-1,7), ylim = c(0,0.3),
xlab = "Y", ylab = c("P(Y=y)"))
axis(1, at=c(0,2,4,6), labels=c(0,2,4,6))
axis(2, at=c(0.25, 0.2, 0.05), labels=c(0.25, 0.2, 0.05))
lines(x = c(0:2), y = rep(1/4,3), lwd = 2)
lines(x = c(2:4), y = rep(1/5,3), lwd = 2)
lines(x = c(4:6), y = rep(1/20,3), lwd = 2)
points(c(2,4), c(0.05,0.2), pch=1)
points(c(2,4), c(1/4,1/5), pch=1)
plot(1, type = 'n', xaxt = 'n', yaxt = 'n', xlim = c(-1,7), ylim = c(0,0.3),
xlab = "Y", ylab = c("P(Y=y)"))
axis(1, at=c(0,2,4,6), labels=c(0,2,4,6))
axis(2, at=c(0.25, 0.2, 0.05), labels=c(0.25, 0.2, 0.05))
lines(x = c(0:2), y = rep(1/4,3), lwd = 2)
lines(x = c(2:4), y = rep(1/5,3), lwd = 2)
lines(x = c(4:6), y = rep(1/20,3), lwd = 2)
points(c(2,4), c(1/4,1/5), pch=1)
points(c(0,2,4), c(1/4,1/5,1/20), pch=19)
segments(c(0, 2, 4, 6), 0,
c(0, 2, 4, 6),
c(0.05, 0.2, 0.25, 0.25),
lty=3)
segments(c(0, 2, 4, 6), 0,
c(0, 2, 4, 6),
c(1/4, 1/5, 1/20, 1/20),
lty=3)
plot(1, type = 'n', xaxt = 'n', yaxt = 'n', xlim = c(-1,7), ylim = c(0,0.3),
xlab = "Y", ylab = c("P(Y=y)"))
axis(1, at=c(0,2,4,6), labels=c(0,2,4,6))
axis(2, at=c(0.25, 0.2, 0.05), labels=c(0.25, 0.2, 0.05))
lines(x = c(0:2), y = rep(1/4,3), lwd = 2)
lines(x = c(2:4), y = rep(1/5,3), lwd = 2)
lines(x = c(4:6), y = rep(1/20,3), lwd = 2)
points(c(2,4), c(1/4,1/5), pch=1)
points(c(0,2,4), c(1/4,1/5,1/20), pch=19)
segments(c(0, 2, 4, 6), 0,
c(0, 2, 4, 6),
c(1/4, 1/5, 1/20, 1/20),
lty=3)
segments(c(0, 2, 4, 6), 0,
c(0, 2, 4, 6),
c(1/4, 1/4, 1/20, 1/20),
lty=3)
plot(1, type = 'n', xaxt = 'n', yaxt = 'n', xlim = c(-1,7), ylim = c(0,0.3),
xlab = "Y", ylab = c("P(Y=y)"))
axis(1, at=c(0,2,4,6), labels=c(0,2,4,6))
axis(2, at=c(0.25, 0.2, 0.05), labels=c(0.25, 0.2, 0.05))
lines(x = c(0:2), y = rep(1/4,3), lwd = 2)
lines(x = c(2:4), y = rep(1/5,3), lwd = 2)
lines(x = c(4:6), y = rep(1/20,3), lwd = 2)
points(c(2,4), c(1/4,1/5), pch=1)
points(c(0,2,4), c(1/4,1/5,1/20), pch=19)
segments(c(0, 2, 4, 6), 0,
c(0, 2, 4, 6),
c(1/4, 1/4, 1/4, 1/20),
lty=3)
plot(1, type = 'n', xaxt = 'n', yaxt = 'n', xlim = c(-1,7), ylim = c(0,0.3),
xlab = "Y", ylab = c("P(Y=y)"))
axis(1, at=c(0,2,4,6), labels=c(0,2,4,6))
axis(2, at=c(0.25, 0.2, 0.05), labels=c(0.25, 0.2, 0.05))
lines(x = c(0:2), y = rep(1/4,3), lwd = 2)
lines(x = c(2:4), y = rep(1/5,3), lwd = 2)
lines(x = c(4:6), y = rep(1/20,3), lwd = 2)
points(c(2,4), c(1/4,1/5), pch=1)
points(c(0,2,4), c(1/4,1/5,1/20), pch=19)
segments(c(0, 2, 4, 6), 0,
c(0, 2, 4, 6),
c(1/4, 1/4, 1/5, 1/20),
lty=3)
0.25+0.4+0.05
2*0.05
0.2/0.3
1-0.286
X = 0:5
p = c(0.339,	0.238,	0.167,	0.117,	0.082,	0.057)
p*X
sum(p*X)
media = sum(p*X)
desvio = X - media
desvio
desvio^2
desvio
desvio^2
desvio^2*p
sum(desvio^2*p)
data.frame(y = 0:5,
p = c(0.339,	0.238,	0.167,	0.117,	0.082,	0.057))
df <- data.frame(y = 0:5,
p = c(0.339,	0.238,	0.167,	0.117,	0.082,	0.057))
df
df$desvio <- y - media
df$desvio <- df$y - media
df
df$desvio_quadrado <- df$desvio^2
df
df$desvio_quadrado_vezes_prob <- df$desvio_quadrado*df$p
df
sum(df$desvio_quadrado_vezes_prob)
df
plot(1, type = 'n', xaxt = 'n', yaxt = 'n', xlim = c(-1,7), ylim = c(0,0.3),
xlab = "Y", ylab = c("P(Y=y)"))
axis(1, at=c(0,2,4,6), labels=c(0,2,4,6))
axis(2, at=c(1/4, 1/5,1/20), labels=c(0.05, 0.2,0.25))
lines(x = c(0:2), y = rep(1/4,3), lwd = 2)
lines(x = c(2:4), y = rep(1/5,3), lwd = 2)
lines(x = c(4:6), y = rep(1/20,3), lwd = 2)
points(c(2,4), c(0.05,0.2), pch=1)
points(c(0,2,4), c(1/4,1/5,1/20), pch=19)
segments(c(0, 2, 4, 6), 0,
c(0, 2, 4, 6),
c(0.05, 0.2, 0.25, 0.25),
lty=3)
plot(1, type = 'n', xaxt = 'n', yaxt = 'n', xlim = c(-1,7), ylim = c(0,0.3),
xlab = "Y", ylab = c("P(Y=y)"))
axis(1, at=c(0,2,4,6), labels=c(0,2,4,6))
axis(2, at=c(1/4, 1/5,1/20), labels=c(0.05, 0.2,0.25))
lines(x = c(0:2), y = rep(1/4,3), lwd = 2)
lines(x = c(2:4), y = rep(1/5,3), lwd = 2)
lines(x = c(4:6), y = rep(1/20,3), lwd = 2)
points(c(2,4), c(0.05,0.2), pch=1)
points(c(0,2,4), c(1/4,1/5,1/20), pch=19)
segments(c(0, 2, 4, 6), 0,
c(0, 2, 4, 6),
c(1/4, 1/4, 1/5, 1/20),
lty=3)
plot(1, type = 'n', xaxt = 'n', yaxt = 'n', xlim = c(-1,7), ylim = c(0,0.3),
xlab = "Y", ylab = c("P(Y=y)"))
axis(1, at=c(0,2,4,6), labels=c(0,2,4,6))
axis(2, at=c(1/4, 1/5,1/20), labels=c(0.05, 0.2,0.25))
lines(x = c(0:2), y = rep(1/4,3), lwd = 2)
lines(x = c(2:4), y = rep(1/5,3), lwd = 2)
lines(x = c(4:6), y = rep(1/20,3), lwd = 2)
points(c(2,4), c(1/4,0.2), pch=1)
points(c(0,2,4), c(1/4,1/5,1/20), pch=19)
segments(c(0, 2, 4, 6), 0,
c(0, 2, 4, 6),
c(1/4, 1/4, 1/5, 1/20),
lty=3)
combn(15,15)
choose(15,15)
choose(15,0:15)
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table) <- c('Mínimo', 'Q1', 'Média', 'Mediana', 'Q3', 'Máximo')
table
}
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor, na.rm = T)),
Variancia = var(vetor, na.rm = T),
Desvio_padrao = sd(vetor, na.rm = T)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
names(table) <- c('Amplitude', 'Variância', 'Desvio padrão')
table
}
notas <- readxl::read_xls('notas-chamada.xls')
names(nota)
names(notas)
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR', 'FALTAS', 'PROVA 1',
'PROVA 2', 'REMOTA 1',
'REMOTA 2', 'REMOTA 3')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$`PROVA 2`))
pander::pander(dispersao(notas$`PROVA 2`))
ggplot(notas) +
geom_histogram(aes(x=`PROVA 2`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`PROVA 2`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
library(ggplot2)
ggplot(notas) +
geom_histogram(aes(x=`PROVA 2`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`PROVA 2`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
pander::pander(posicao(notas$`REMOTA 3`))
pander::pander(dispersao(notas$`REMOTA 3`))
setwd("~/CE009ELTA")
rmarkdown::render_site()
rmarkdown::render_site()
