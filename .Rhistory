10)))/3
9.9+
7+
10+
mean(c(8.9
9.4
9.9
7
10
mean(c(8.9,
9.4,
#         5.4
10))
(9.9+
#7
10+
mean(c(8.9,
9.4,
#         5.4
10)))/3
mean(c(5.6,
7.3,
8.2))
mean(c(3.6,
9.1,
mean(c(5.6,
7.3,
8.2))))
mean(c(5.6,
7.3,
8.2))
3.6
9.1
3.6+
9.1+
mean(c(5.6,
7.3,
8.2))
mean(c(2.8
7
mean(c(2.8,
7,
6.3))
3.5+
0.4+
mean(c(2.8,
7,
6.3))
(3.5+
0.4+
mean(c(2.8,
7,
6.3)))/3
mean(c(8.9,
9.4,
9))
mean(c(9.9,
8,
mean(c(8.9,
9.4,
9))))
mean(c(5.5,
9.6,
10))
(7.5+
6.5+
mean(c(5.5,
9.6,
10)))/3
round((7.5+
6.5+
mean(c(5.5,
9.6,
10)))/3, 2)
### Medidas de posição
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table) <- c('Mínimo', 'Q1', 'Média', 'Mediana', 'Q3', 'Máximo')
table
}
#----------------------------------------------------------------------
### Medidas de dispersao
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor, na.rm = T)),
Variancia = var(vetor, na.rm = T),
Desvio_padrao = sd(vetor, na.rm = T)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
names(table) <- c('Amplitude', 'Variância', 'Desvio padrão')
table
}
#----------------------------------------------------------------------
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'PARCIAL')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$`PROVA 1`))
pander::pander(dispersao(notas$`PROVA 1`))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`PROVA 1`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`PROVA 1`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 1")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=`PROVA 1`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$`PROVA 2`))
pander::pander(dispersao(notas$`PROVA 2`))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`PROVA 2`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`PROVA 2`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=`PROVA 2`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$`PROVA 3`))
pander::pander(dispersao(notas$`PROVA 3`))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`PROVA 3`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`PROVA 3`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 3")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=`PROVA 3`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
pander::pander(posicao(notas$`REMOTA 4`))
pander::pander(dispersao(notas$`REMOTA 4`))
notas <- readxl::read_xls('notas-chamada.xls')
names(notas)
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'NOTA FINAL')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'NOTA FINAL',
'SITUAÇÃO PRÉ EXAME')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
notas$`SITUAÇÃO PRÉ EXAME`
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'NOTA FINAL',
'SITUAÇÃO PRÉ EXAME')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'NOTA FINAL',
'SITUAÇÃO PRÉ EXAME')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$`NOTA FINAL`))
pander::pander(dispersao(notas$`NOTA FINAL`))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`NOTA FINAL`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`NOTA FINAL`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("NOTA FINAL")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=`REMOTA 3`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
DT::datatable(notas[,c('GRR',
#                        'FALTAS',
#                        'PROVA 1',
#                        'PROVA 2',
#                        'PROVA 3',
#                        'REMOTA 1',
#                        'REMOTA 2',
#                        'REMOTA 3',
#                        'REMOTA 4',
#                        'NOTA FINAL',
'SITUAÇÃO PRÉ EXAME')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
setwd("~/CE009ELTA")
rmarkdown::render_site()
notas <- readxl::read_xls('notas-chamada.xls')
notas$NOME
notas$GRR
notas$`NOTA FINAL`
notas$`F SITUAÇÃO PRÉ EXAME`
notas$`SITUAÇÃO PRÉ EXAME`
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'NOTA FINAL',
'SITUAÇÃO PRÉ EXAME')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'NOTA FINAL',
'F SITUAÇÃO PRÉ EXAME')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'NOTA FINAL',
'F SITUAÇÃO PRÉ EXAME')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'NOTA FINAL',
'SITUAÇÃO PRÉ EXAME')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
notas <- readxl::read_xls('notas-chamada.xls')
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'REMOTA 4',
'NOTA FINAL',
'SITUAÇÃO PRÉ EXAME')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
rmarkdown::render_site()
rmarkdown::render_site()
